{"version":3,"sources":["api/authSpotify.js","pages/Home/index.tsx","components/router/privateRouter.tsx","components/router/root.router.tsx","components/router/index.tsx","App.tsx","reportWebVitals.js","index.js","redux/store.ts","redux/authSlice.ts","pages/Home/home.module.css","redux/playlistSlice.ts","api/apiSpotify.js"],"names":["SCOPE","loginAuthorizeSpotify","window","location","process","Home","history","useHistory","dispatch","useDispatch","useEffect","hash","access_token","substring","split","reduce","acc","currentValue","key","value","login","getProfile","then","data","storeUser","push","height","flexDirection","p","alignItems","justifyContent","className","style","as","size","mb","id","onClick","variant","width","bg","type","PrivateRoute","routerProps","useAppSelector","state","auth","isAuthenticated","to","Routers","path","exact","component","lazy","ListRouter","isHome","fallback","render","map","route","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","configureStore","reducer","authReducer","playlist","playlistReducer","useAppDispatch","useSelector","initialState","accessToken","user","authSlice","createSlice","name","reducers","action","payload","logout","actions","module","exports","tracks","selectedTracks","form","title","description","playlistSlice","setTracks","addSelectedTracks","substractSelectedTracks","index","indexOf","splice","setFormTitle","setFormDescription","clearForm","clearSelectedTracks","clearState","SPOTIFY_ENDPOINT","fetch","headers","Authorization","res","json","getSearchTracks","search","method","createNewPlaylist","userID","newPlaylist","body","JSON","stringify","public","collaborative","storeTracksToNewPlaylist","newPlaylistId","uris","position"],"mappings":"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","file":"static/js/main.1a327cbd.chunk.js","sourcesContent":["const CLIENT_ID = process.env.REACT_APP_SPOTIFY_ID;\nconst SPOTIFY_AUTHORIZE_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst REDIRECT_URL_AFTER_LOGIN = process.env.REACT_APP_BASE_URL;\nconst SCOPE = ['playlist-modify-private', 'user-read-email'];\n\nconst loginAuthorizeSpotify = () => {\n  window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPE}&response_type=token&show_dialog=true`;\n};\n\nconst getAccessTokenFromURL = (hash) => {\n  const stringAfterHastag = hash.substring(1);\n  const paramInUrl = stringAfterHastag.split('&');\n  const paramSplitUp = paramInUrl.reduce((acc, currentValue) => {\n    const [key, value] = currentValue.split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n  return paramSplitUp;\n};\n\nexport { loginAuthorizeSpotify, getAccessTokenFromURL };\n","import React, { useEffect } from 'react';\n\n// ?lib third party\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n// ? api\nimport { loginAuthorizeSpotify, getAccessTokenFromURL } from 'api/authSpotify';\nimport { getProfile } from 'api/apiSpotify';\n\n// ! reducer area\nimport { login, storeUser } from 'redux/authSlice';\n\n// ? style import css\nimport { Flex, Heading, Text, Button } from '@chakra-ui/react';\n\nimport style from './home.module.css';\n\nconst Home = () => {\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (window.location.hash) {\n      const { access_token } = getAccessTokenFromURL(window.location.hash);\n      dispatch(login(access_token));\n      getProfile(access_token).then((data) => dispatch(storeUser(data)));\n      history.push('/create-playlist');\n    }\n  }, [dispatch, history]);\n\n  return (\n    <Flex\n      height=\"100vh\"\n      flexDirection=\"column\"\n      p={10}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      className={style['wrapper-home']}\n    >\n      <Heading as=\"h4\" size=\"2xl\">\n        HEAVEN = MUSIC\n      </Heading>\n\n      <Text>Make your life better with music</Text>\n      <Text mb={5}>flight to the imagination and life to everything.</Text>\n      <Button\n        className={style['btn-login']}\n        id=\"btn-login\"\n        onClick={loginAuthorizeSpotify}\n        variant=\"solid\"\n        width=\"200px\"\n        bg=\"#1db954\"\n        type=\"button\"\n      >\n        Please Login First\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAppSelector } from 'redux/store';\n\nconst PrivateRoute = ({ ...routerProps }) => {\n  const { isAuthenticated } = useAppSelector((state) => state.auth);\n\n  if (isAuthenticated) {\n    return <Route {...routerProps} />;\n  }\n  return <Redirect to=\"/\" />;\n};\n\nexport default PrivateRoute;\n","import React, { lazy, LazyExoticComponent } from 'react';\n\nexport type typeRouters = {\n  path: string;\n  exact: boolean;\n  component: LazyExoticComponent<React.FC>;\n};\n\nexport const Routers: typeRouters[] = [\n  {\n    path: '/profile',\n    exact: true,\n    component: lazy(() => import('pages/Profile')),\n  },\n  {\n    path: '/create-playlist',\n    exact: true,\n    component: lazy(() => import('pages/CreatePlaylist')),\n  },\n];\n","import React, { Suspense } from 'react';\r\n\r\n// ? lib third party\r\nimport { useAppSelector } from 'redux/store';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\n// ?components\r\nimport Home from 'pages/Home';\r\nimport PrivateRoute from './privateRouter';\r\nimport { Routers } from './root.router';\r\n\r\nconst ListRouter = () => {\r\n  const isHome = useAppSelector((state) => state.auth.isAuthenticated);\r\n  return (\r\n    <Suspense fallback={<h1>Loading...</h1>}>\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() =>\r\n              isHome ? <Redirect to=\"/create-playlist\" /> : <Home />\r\n            }\r\n          />\r\n          {Routers.map((route) => (\r\n            <PrivateRoute\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ListRouter;\r\n","import React from 'react';\n\n// ? lib third party\nimport { Provider } from 'react-redux';\nimport { ChakraProvider } from '@chakra-ui/react';\n\n// ! redux store\nimport store from 'redux/store';\n\n// ? routers\nimport ListRouter from 'components/router';\n\n// ? css style\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ChakraProvider>\n        <ListRouter />\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\nimport playlistReducer from './playlistSlice';\n\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    playlist: playlistReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default store;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { AuthState } from '../types/store';\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  accessToken: '',\n  user: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.isAuthenticated = true;\n      state.accessToken = action.payload;\n    },\n    storeUser: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: () => initialState,\n  },\n});\n\nexport const { login, logout, storeUser } = authSlice.actions;\n\nexport default authSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper-home\":\"home_wrapper-home__2m2_0\",\"btn-login\":\"home_btn-login__1w0Sn\"};","import { createSlice } from '@reduxjs/toolkit';\n\nimport { PlaylistState } from '../types/store';\n\nconst initialState: PlaylistState = {\n  tracks: [],\n  selectedTracks: [],\n  form: {\n    title: '',\n    description: '',\n  },\n};\n\nconst playlistSlice = createSlice({\n  name: 'playlist',\n  initialState,\n  reducers: {\n    setTracks: (state, action) => {\n      state.tracks = action.payload;\n    },\n    addSelectedTracks: (state, action) => {\n      state.selectedTracks.push(action.payload);\n    },\n    substractSelectedTracks: (state, action) => {\n      const index = state.selectedTracks.indexOf(action.payload);\n      state.selectedTracks.splice(index, 1);\n    },\n    setFormTitle: (state, action) => {\n      state.form.title = action.payload;\n    },\n    setFormDescription: (state, action) => {\n      state.form.description = action.payload;\n    },\n    clearForm: (state) => {\n      state.form = initialState.form;\n    },\n    clearSelectedTracks: (state) => {\n      state.selectedTracks = [];\n    },\n    clearState: () => initialState,\n  },\n});\n\nexport const {\n  setTracks,\n  addSelectedTracks,\n  substractSelectedTracks,\n  clearSelectedTracks,\n  setFormTitle,\n  setFormDescription,\n  clearState,\n} = playlistSlice.actions;\n\nexport default playlistSlice.reducer;\n","const SPOTIFY_ENDPOINT = 'https://api.spotify.com/v1';\n\nconst getProfile = (accessToken) => {\n  return fetch(`${SPOTIFY_ENDPOINT}/me`, {\n    headers: {\n      Authorization: 'Bearer ' + accessToken,\n    },\n  }).then((res) => res.json());\n};\n\nconst getSearchTracks = (search, accessToken) => {\n  return fetch(`${SPOTIFY_ENDPOINT}/search?q=${search}&type=track&limit=10`, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + accessToken,\n    },\n  }).then((res) => res.json());\n};\n\nconst createNewPlaylist = (userID, accessToken, newPlaylist) => {\n  return fetch(`${SPOTIFY_ENDPOINT}/users/${userID}/playlists`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + accessToken,\n    },\n    body: JSON.stringify({\n      name: newPlaylist.name,\n      public: false,\n      collaborative: false,\n      description: newPlaylist.description,\n    }),\n  }).then((res) => res.json());\n};\n\nconst storeTracksToNewPlaylist = (newPlaylistId, accessToken, playlist) => {\n  return fetch(\n    `${SPOTIFY_ENDPOINT}/playlists/${newPlaylistId}/tracks?position=0&uris=${playlist}`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + accessToken,\n      },\n      body: JSON.stringify({\n        uris: playlist,\n        position: 0,\n      }),\n    }\n  ).then((res) => res.json());\n};\n\nexport {\n  getProfile,\n  getSearchTracks,\n  createNewPlaylist,\n  storeTracksToNewPlaylist,\n};\n"],"sourceRoot":""}